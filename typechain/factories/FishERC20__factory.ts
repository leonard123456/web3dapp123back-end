/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FishERC20, FishERC20Interface } from "../FishERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "_burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "executor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_type",
        type: "bool",
      },
    ],
    name: "setExecutor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061165e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a22b35ce1161007c578063a22b35ce14610263578063a457c2d714610276578063a9059cbb14610289578063dd62ed3e1461029c578063f2fde38b146102af578063f542033f146102c257610137565b806370a0823114610218578063715018a61461022b57806379cc6790146102335780638da5cb5b1461024657806395d89b411461025b57610137565b8063313ce567116100ff578063313ce567146101b557806339509351146101ca57806340c10f19146101dd57806342966c68146101f057806348c7e5281461020557610137565b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017a5780631e1bff3f1461018f57806323b872dd146101a2575b600080fd5b6101446102d5565b604051610151919061115c565b60405180910390f35b61016d610168366004611083565b610367565b6040516101519190611151565b610182610384565b6040516101519190611557565b61016d61019d366004611049565b61038a565b61016d6101b036600461100e565b610403565b6101bd610493565b6040516101519190611560565b61016d6101d8366004611083565b610498565b61016d6101eb366004611083565b6104ec565b6102036101fe366004611125565b610525565b005b61016d610213366004610fbb565b610532565b610182610226366004610fbb565b610547565b610203610566565b610203610241366004611083565b6105b1565b61024e6105bf565b604051610151919061113d565b6101446105ce565b610203610271366004611083565b6105dd565b61016d610284366004611083565b610629565b61016d610297366004611083565b6106a2565b6101826102aa366004610fdc565b6106b6565b6102036102bd366004610fbb565b6106e1565b6102036102d03660046110ac565b61074f565b6060606880546102e49061159d565b80601f01602080910402602001604051908101604052809291908181526020018280546103109061159d565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b5050505050905090565b600061037b6103746107e4565b84846107e8565b50600192915050565b60675490565b60006103946107e4565b6001600160a01b03166103a56105bf565b6001600160a01b0316146103d45760405162461bcd60e51b81526004016103cb906113dc565b60405180910390fd5b506001600160a01b0382166000908152609760205260409020805482151560ff19909116179055600192915050565b600061041084848461089c565b6001600160a01b0384166000908152606660205260408120816104316107e4565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156104745760405162461bcd60e51b81526004016103cb90611394565b610488856104806107e4565b8584036107e8565b506001949350505050565b601290565b600061037b6104a56107e4565b8484606660006104b36107e4565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546104e7919061156e565b6107e8565b3360009081526097602052604081205460ff1661051b5760405162461bcd60e51b81526004016103cb90611302565b61037b83836109c6565b61052f3382610a8e565b50565b60976020526000908152604090205460ff1681565b6001600160a01b0381166000908152606560205260409020545b919050565b61056e6107e4565b6001600160a01b031661057f6105bf565b6001600160a01b0316146105a55760405162461bcd60e51b81526004016103cb906113dc565b6105af6000610b7f565b565b6105bb82826105dd565b5050565b6033546001600160a01b031690565b6060606980546102e49061159d565b600061060d826040518060600160405280602481526020016116056024913961060686336106b6565b9190610bd1565b905061061a8333836107e8565b6106248383610a8e565b505050565b600080606660006106386107e4565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156106845760405162461bcd60e51b81526004016103cb906114db565b61069861068f6107e4565b858584036107e8565b5060019392505050565b600061037b6106af6107e4565b848461089c565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6106e96107e4565b6001600160a01b03166106fa6105bf565b6001600160a01b0316146107205760405162461bcd60e51b81526004016103cb906113dc565b6001600160a01b0381166107465760405162461bcd60e51b81526004016103cb90611234565b61052f81610b7f565b600054610100900460ff1680610768575060005460ff16155b6107845760405162461bcd60e51b81526004016103cb90611346565b600054610100900460ff161580156107af576000805460ff1961ff0019909116610100171660011790555b6107b7610bfd565b6107c18585610c81565b6107cb83836109c6565b80156107dd576000805461ff00191690555b5050505050565b3390565b6001600160a01b03831661080e5760405162461bcd60e51b81526004016103cb90611497565b6001600160a01b0382166108345760405162461bcd60e51b81526004016103cb9061127a565b6001600160a01b0380841660008181526066602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061088f908590611557565b60405180910390a3505050565b6001600160a01b0383166108c25760405162461bcd60e51b81526004016103cb90611452565b6001600160a01b0382166108e85760405162461bcd60e51b81526004016103cb906111af565b6108f3838383610624565b6001600160a01b0383166000908152606560205260409020548181101561092c5760405162461bcd60e51b81526004016103cb906112bc565b6001600160a01b0380851660009081526065602052604080822085850390559185168152908120805484929061096390849061156e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109ad9190611557565b60405180910390a36109c0848484610624565b50505050565b6001600160a01b0382166109ec5760405162461bcd60e51b81526004016103cb90611520565b6109f860008383610624565b8060676000828254610a0a919061156e565b90915550506001600160a01b03821660009081526065602052604081208054839290610a3790849061156e565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a7a908590611557565b60405180910390a36105bb60008383610624565b6001600160a01b038216610ab45760405162461bcd60e51b81526004016103cb90611411565b610ac082600083610624565b6001600160a01b03821660009081526065602052604090205481811015610af95760405162461bcd60e51b81526004016103cb906111f2565b6001600160a01b0383166000908152606560205260408120838303905560678054849290610b28908490611586565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b6b908690611557565b60405180910390a361062483600084610624565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008184841115610bf55760405162461bcd60e51b81526004016103cb919061115c565b505050900390565b600054610100900460ff1680610c16575060005460ff16155b610c325760405162461bcd60e51b81526004016103cb90611346565b600054610100900460ff16158015610c5d576000805460ff1961ff0019909116610100171660011790555b610c65610d09565b610c6d610d7c565b801561052f576000805461ff001916905550565b600054610100900460ff1680610c9a575060005460ff16155b610cb65760405162461bcd60e51b81526004016103cb90611346565b600054610100900460ff16158015610ce1576000805460ff1961ff0019909116610100171660011790555b610ce9610d09565b610cf38383610dec565b8015610624576000805461ff0019169055505050565b600054610100900460ff1680610d22575060005460ff16155b610d3e5760405162461bcd60e51b81526004016103cb90611346565b600054610100900460ff16158015610c6d576000805460ff1961ff001990911661010017166001179055801561052f576000805461ff001916905550565b600054610100900460ff1680610d95575060005460ff16155b610db15760405162461bcd60e51b81526004016103cb90611346565b600054610100900460ff16158015610ddc576000805460ff1961ff0019909116610100171660011790555b610c6d610de76107e4565b610b7f565b600054610100900460ff1680610e05575060005460ff16155b610e215760405162461bcd60e51b81526004016103cb90611346565b600054610100900460ff16158015610e4c576000805460ff1961ff0019909116610100171660011790555b8251610e5f906068906020860190610e8a565b508151610e73906069906020850190610e8a565b508015610624576000805461ff0019169055505050565b828054610e969061159d565b90600052602060002090601f016020900481019282610eb85760008555610efe565b82601f10610ed157805160ff1916838001178555610efe565b82800160010185558215610efe579182015b82811115610efe578251825591602001919060010190610ee3565b50610f0a929150610f0e565b5090565b5b80821115610f0a5760008155600101610f0f565b80356001600160a01b038116811461056157600080fd5b600082601f830112610f4a578081fd5b813567ffffffffffffffff80821115610f6557610f656115ee565b604051601f8301601f191681016020018281118282101715610f8957610f896115ee565b604052828152848301602001861015610fa0578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610fcc578081fd5b610fd582610f23565b9392505050565b60008060408385031215610fee578081fd5b610ff783610f23565b915061100560208401610f23565b90509250929050565b600080600060608486031215611022578081fd5b61102b84610f23565b925061103960208501610f23565b9150604084013590509250925092565b6000806040838503121561105b578182fd5b61106483610f23565b915060208301358015158114611078578182fd5b809150509250929050565b60008060408385031215611095578182fd5b61109e83610f23565b946020939093013593505050565b600080600080608085870312156110c1578081fd5b843567ffffffffffffffff808211156110d8578283fd5b6110e488838901610f3a565b955060208701359150808211156110f9578283fd5b5061110687828801610f3a565b93505061111560408601610f23565b9396929550929360600135925050565b600060208284031215611136578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b818110156111885785810183015185820160400152820161116c565b818111156111995783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115611581576115816115d8565b500190565b600082821015611598576115986115d8565b500390565b6002810460018216806115b157607f821691505b602082108114156115d257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220945eb0dc8a00da108a3290a0a8b5d83186cffaa164accd3a75a8873badd31c1464736f6c63430008000033";

export class FishERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FishERC20> {
    return super.deploy(overrides || {}) as Promise<FishERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FishERC20 {
    return super.attach(address) as FishERC20;
  }
  connect(signer: Signer): FishERC20__factory {
    return super.connect(signer) as FishERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FishERC20Interface {
    return new utils.Interface(_abi) as FishERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FishERC20 {
    return new Contract(address, _abi, signerOrProvider) as FishERC20;
  }
}
