/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC20, TestERC20Interface } from "../TestERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "executor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_type",
        type: "bool",
      },
    ],
    name: "setExecutor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611551806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806348c7e528116100ad57806395d89b411161007157806395d89b4114610245578063a457c2d71461024d578063a9059cbb14610260578063dd62ed3e14610273578063f2fde38b1461028657610121565b806348c7e528146101ef5780634cd88b761461020257806370a0823114610215578063715018a6146102285780638da5cb5b1461023057610121565b806323b872dd116100f457806323b872dd1461018c578063313ce5671461019f57806339509351146101b457806340c10f19146101c757806342966c68146101da57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd146101645780631e1bff3f14610179575b600080fd5b61012e610299565b60405161013b9190611073565b60405180910390f35b610157610152366004610fb2565b6102b7565b60405161013b9190611068565b61016c6102d4565b60405161013b919061146e565b610157610187366004610f78565b6102da565b61015761019a366004610f3d565b610353565b6101a76103e3565b60405161013b9190611477565b6101576101c2366004610fb2565b6103e8565b6101576101d5366004610fb2565b61043c565b6101ed6101e836600461103c565b610475565b005b6101576101fd366004610eea565b610482565b6101ed610210366004610fdb565b610497565b61016c610223366004610eea565b610520565b6101ed61053f565b61023861058a565b60405161013b9190611054565b61012e610599565b61015761025b366004610fb2565b61062b565b61015761026e366004610fb2565b6106a4565b61016c610281366004610f0b565b6106b8565b6101ed610294366004610eea565b6106e3565b6040805180820190915260048152634141414160e01b602082015290565b60006102cb6102c4610751565b8484610755565b50600192915050565b60675490565b60006102e4610751565b6001600160a01b03166102f561058a565b6001600160a01b0316146103245760405162461bcd60e51b815260040161031b906112f3565b60405180910390fd5b506001600160a01b0382166000908152609760205260409020805482151560ff19909116179055600192915050565b6000610360848484610809565b6001600160a01b038416600090815260666020526040812081610381610751565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103c45760405162461bcd60e51b815260040161031b906112ab565b6103d8856103d0610751565b858403610755565b506001949350505050565b601290565b60006102cb6103f5610751565b848460666000610403610751565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546104379190611485565b610755565b3360009081526097602052604081205460ff1661046b5760405162461bcd60e51b815260040161031b90611219565b6102cb8383610933565b61047f33826109ff565b50565b60976020526000908152604090205460ff1681565b600054610100900460ff16806104b0575060005460ff16155b6104cc5760405162461bcd60e51b815260040161031b9061125d565b600054610100900460ff161580156104f7576000805460ff1961ff0019909116610100171660011790555b6104ff610af0565b6105098383610b74565b801561051b576000805461ff00191690555b505050565b6001600160a01b0381166000908152606560205260409020545b919050565b610547610751565b6001600160a01b031661055861058a565b6001600160a01b03161461057e5760405162461bcd60e51b815260040161031b906112f3565b6105886000610be6565b565b6033546001600160a01b031690565b6060606980546105a8906114b4565b80601f01602080910402602001604051908101604052809291908181526020018280546105d4906114b4565b80156106215780601f106105f657610100808354040283529160200191610621565b820191906000526020600020905b81548152906001019060200180831161060457829003601f168201915b5050505050905090565b6000806066600061063a610751565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156106865760405162461bcd60e51b815260040161031b906113f2565b61069a610691610751565b85858403610755565b5060019392505050565b60006102cb6106b1610751565b8484610809565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6106eb610751565b6001600160a01b03166106fc61058a565b6001600160a01b0316146107225760405162461bcd60e51b815260040161031b906112f3565b6001600160a01b0381166107485760405162461bcd60e51b815260040161031b9061114b565b61047f81610be6565b3390565b6001600160a01b03831661077b5760405162461bcd60e51b815260040161031b906113ae565b6001600160a01b0382166107a15760405162461bcd60e51b815260040161031b90611191565b6001600160a01b0380841660008181526066602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107fc90859061146e565b60405180910390a3505050565b6001600160a01b03831661082f5760405162461bcd60e51b815260040161031b90611369565b6001600160a01b0382166108555760405162461bcd60e51b815260040161031b906110c6565b61086083838361051b565b6001600160a01b038316600090815260656020526040902054818110156108995760405162461bcd60e51b815260040161031b906111d3565b6001600160a01b038085166000908152606560205260408082208585039055918516815290812080548492906108d0908490611485565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161091a919061146e565b60405180910390a361092d84848461051b565b50505050565b6001600160a01b0382166109595760405162461bcd60e51b815260040161031b90611437565b6109656000838361051b565b80606760008282546109779190611485565b90915550506001600160a01b038216600090815260656020526040812080548392906109a4908490611485565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109e790859061146e565b60405180910390a36109fb6000838361051b565b5050565b6001600160a01b038216610a255760405162461bcd60e51b815260040161031b90611328565b610a318260008361051b565b6001600160a01b03821660009081526065602052604090205481811015610a6a5760405162461bcd60e51b815260040161031b90611109565b6001600160a01b0383166000908152606560205260408120838303905560678054849290610a9990849061149d565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610adc90869061146e565b60405180910390a361051b8360008461051b565b600054610100900460ff1680610b09575060005460ff16155b610b255760405162461bcd60e51b815260040161031b9061125d565b600054610100900460ff16158015610b50576000805460ff1961ff0019909116610100171660011790555b610b58610c38565b610b60610cab565b801561047f576000805461ff001916905550565b600054610100900460ff1680610b8d575060005460ff16155b610ba95760405162461bcd60e51b815260040161031b9061125d565b600054610100900460ff16158015610bd4576000805460ff1961ff0019909116610100171660011790555b610bdc610c38565b6105098383610d1b565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610c51575060005460ff16155b610c6d5760405162461bcd60e51b815260040161031b9061125d565b600054610100900460ff16158015610b60576000805460ff1961ff001990911661010017166001179055801561047f576000805461ff001916905550565b600054610100900460ff1680610cc4575060005460ff16155b610ce05760405162461bcd60e51b815260040161031b9061125d565b600054610100900460ff16158015610d0b576000805460ff1961ff0019909116610100171660011790555b610b60610d16610751565b610be6565b600054610100900460ff1680610d34575060005460ff16155b610d505760405162461bcd60e51b815260040161031b9061125d565b600054610100900460ff16158015610d7b576000805460ff1961ff0019909116610100171660011790555b8251610d8e906068906020860190610db9565b508151610da2906069906020850190610db9565b50801561051b576000805461ff0019169055505050565b828054610dc5906114b4565b90600052602060002090601f016020900481019282610de75760008555610e2d565b82601f10610e0057805160ff1916838001178555610e2d565b82800160010185558215610e2d579182015b82811115610e2d578251825591602001919060010190610e12565b50610e39929150610e3d565b5090565b5b80821115610e395760008155600101610e3e565b80356001600160a01b038116811461053a57600080fd5b600082601f830112610e79578081fd5b813567ffffffffffffffff80821115610e9457610e94611505565b604051601f8301601f191681016020018281118282101715610eb857610eb8611505565b604052828152848301602001861015610ecf578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610efb578081fd5b610f0482610e52565b9392505050565b60008060408385031215610f1d578081fd5b610f2683610e52565b9150610f3460208401610e52565b90509250929050565b600080600060608486031215610f51578081fd5b610f5a84610e52565b9250610f6860208501610e52565b9150604084013590509250925092565b60008060408385031215610f8a578182fd5b610f9383610e52565b915060208301358015158114610fa7578182fd5b809150509250929050565b60008060408385031215610fc4578182fd5b610fcd83610e52565b946020939093013593505050565b60008060408385031215610fed578182fd5b823567ffffffffffffffff80821115611004578384fd5b61101086838701610e69565b93506020850135915080821115611025578283fd5b5061103285828601610e69565b9150509250929050565b60006020828403121561104d578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561109f57858101830151858201604001528201611083565b818111156110b05783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115611498576114986114ef565b500190565b6000828210156114af576114af6114ef565b500390565b6002810460018216806114c857607f821691505b602082108114156114e957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220de8d2a0269a127c0c56d583c49882a8d2bac4926a8e2cd28beb8176f76bc925364736f6c63430008000033";

export class TestERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC20> {
    return super.deploy(overrides || {}) as Promise<TestERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestERC20 {
    return super.attach(address) as TestERC20;
  }
  connect(signer: Signer): TestERC20__factory {
    return super.connect(signer) as TestERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20Interface {
    return new utils.Interface(_abi) as TestERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20 {
    return new Contract(address, _abi, signerOrProvider) as TestERC20;
  }
}
