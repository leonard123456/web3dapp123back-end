/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Farm, FarmInterface } from "../Farm";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bonusEndBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ManualMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "devAddr",
        type: "address",
      },
    ],
    name: "SetDevAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenPerBlock",
        type: "uint256",
      },
    ],
    name: "SetTokenPerBlock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "executor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_currentBlock",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
    ],
    name: "isDuplicatedPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "manualMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accTokenPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accTokenPerShareTilBonusEnd",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bonusMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bonusEndBlock",
        type: "uint256",
      },
    ],
    name: "setBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "setDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_type",
        type: "bool",
      },
    ],
    name: "setExecutor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenPerBlock",
        type: "uint256",
      },
    ],
    name: "setTokenPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bonusDebt",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "fundedBy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
    ],
    name: "withdrawalERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200269a3803806200269a833981016040819052620000349162000126565b6200004862000042620000b5565b620000b9565b6001808055600060058190556009819055600280546001600160a01b039889166001600160a01b0319918216179091556003805497909816961695909517909555600492909255600691909155600a55338152600b60205260409020805460ff1916909117905562000178565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200012157600080fd5b919050565b600080600080600060a086880312156200013e578081fd5b620001498662000109565b9450620001596020870162000109565b6040870151606088015160809098015196999198509695945092505050565b61251280620001886000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063630b5ba11161011a578063b03df69d116100ad578063d49e77cd1161007c578063d49e77cd146103f9578063ddc6326214610401578063e4c5ff4614610414578063f2fde38b14610427578063fc0c546a1461043a576101fb565b8063b03df69d146103ad578063b5c5f672146103c0578063cc6dbc27146103d3578063d477f05f146103e6576101fb565b80638dbb1e3a116100e95780638dbb1e3a1461035c578063930ed0331461036f57806393f1a40b14610382578063a8b973a1146103a5576101fb565b8063630b5ba114610324578063715018a61461032c5780637abceffd146103345780638da5cb5b14610347576101fb565b8063411330bd1161019257806348cd4cb11161016157806348cd4cb1146102e357806348e43af4146102eb57806351eb05a6146102fe5780635312ea8e14610311576101fb565b8063411330bd146102a25780634198709a146102b557806346ca6bea146102bd57806348c7e528146102d0576101fb565b806317caf6f1116101ce57806317caf6f11461026a5780631aed6553146102725780631e1bff3f1461027a5780632e97766d1461029a576101fb565b8063037c99b014610200578063081e3eda146102155780630efe6a8b146102335780631526fe2714610246575b600080fd5b61021361020e366004611e09565b610442565b005b61021d6104d4565b60405161022a91906123d6565b60405180910390f35b610213610241366004611d21565b6104da565b610259610254366004611d6f565b6106bb565b60405161022a959493929190611ec4565b61021d610706565b61021d61070c565b61028d610288366004611cc2565b610712565b60405161022a9190611ef2565b61021d610781565b6102136102b0366004611d6f565b610785565b61021d6107f7565b6102136102cb366004611e2a565b6107fd565b61028d6102de366004611ca8565b6108cd565b61021d6108e2565b61021d6102f9366004611d9f565b6108e8565b61021361030c366004611d6f565b610a72565b61021361031f366004611d6f565b610ccc565b610213610d81565b610213610dac565b610213610342366004611dca565b610df7565b61034f610fd2565b60405161022a9190611e73565b61021d61036a366004611e09565b610fe1565b61028d61037d366004611cf8565b611071565b610395610390366004611d9f565b6110cf565b60405161022a94939291906123df565b61021d61110a565b61028d6103bb366004611ca8565b611110565b6102136103ce366004611d21565b611194565b6102136103e1366004611cf8565b6111da565b6102136103f4366004611ca8565b61124a565b61034f6112e6565b61021361040f366004611d6f565b6112f5565b610213610422366004611cf8565b611398565b610213610435366004611ca8565b611496565b61034f611504565b61044a611513565b6001600160a01b031661045b610fd2565b6001600160a01b03161461048a5760405162461bcd60e51b8152600401610481906121de565b60405180910390fd5b4381116104a95760405162461bcd60e51b815260040161048190611f76565b600182116104c95760405162461bcd60e51b815260040161048190612166565b600591909155600655565b60075490565b60018060008282546104ec9190612403565b909155505060015460078054600091908590811061051a57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526008825260408085206001600160a01b03808c168752935290932060038101546005909302909301935016156105835760038101546001600160a01b031633146105835760405162461bcd60e51b815260040161048190612241565b81546001600160a01b03166105aa5760405162461bcd60e51b8152600401610481906122c5565b6105b385610a72565b8054156105c4576105c48686611517565b60038101546001600160a01b03166105eb576003810180546001600160a01b031916331790555b8154610602906001600160a01b0316333087611668565b805461060e90856116c0565b80825560038301546106319164e8d4a510009161062b91906116ef565b90611734565b6001820155600482015481546106519164e8d4a510009161062b916116ef565b6002820155604051859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159061068a9088906123d6565b60405180910390a3505060015481146106b55760405162461bcd60e51b815260040161048190612346565b50505050565b600781815481106106cb57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909185565b60095481565b60065481565b600061071c611513565b6001600160a01b031661072d610fd2565b6001600160a01b0316146107535760405162461bcd60e51b8152600401610481906121de565b506001600160a01b0382166000908152600b60205260409020805460ff191682151517905560015b92915050565b4390565b61078d611513565b6001600160a01b031661079e610fd2565b6001600160a01b0316146107c45760405162461bcd60e51b8152600401610481906121de565b600481905560405181907f800551221a8fe757162a8e759ea245bea08c255977d0ce5aa8cacb88a97e572d90600090a250565b60045481565b336000908152600b602052604090205460ff1661082c5760405162461bcd60e51b815260040161048190611fe4565b801561083a5761083a610d81565b61088b826108856007868154811061086257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016001015460095461175f90919063ffffffff16565b906116c0565b60098190555081600784815481106108b357634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160010181905550505050565b600b6020526000908152604090205460ff1681565b600a5481565b6000806007848154811061090c57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526008825260408085206001600160a01b03808a16875293528085206003600590950290920193840154845491516370a0823160e01b815294965091949193919216906370a082319061096f903090600401611e73565b60206040518083038186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190611d87565b90508360020154431180156109d357508015155b15610a395760006109e8856002015443610fe1565b90506000610a1560095461062b8860010154610a0f600454876116ef90919063ffffffff16565b906116ef565b9050610a34610a2d8461062b8464e8d4a510006116ef565b85906116c0565b935050505b610a678360010154610a6164e8d4a5100061062b8688600001546116ef90919063ffffffff16565b9061175f565b979650505050505050565b600060078281548110610a9557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201905080600201544311610ab65750610cc9565b80546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610ae6903090600401611e73565b60206040518083038186803b158015610afe57600080fd5b505afa158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b369190611d87565b905080610b4a575043600290910155610cc9565b6000610b5a836002015443610fe1565b90506000610b8160095461062b8660010154610a0f600454876116ef90919063ffffffff16565b6002546040516340c10f1960e01b81529192506001600160a01b0316906340c10f1990610bb49030908590600401611eab565b602060405180830381600087803b158015610bce57600080fd5b505af1158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c069190611d53565b50610c28610c1d8461062b8464e8d4a510006116ef565b6003860154906116c0565b60038501556006544311610c4157600384015460048501555b60065443118015610c5757506006548460020154105b15610cbb576000610c9160095461062b8760010154610a0f600454610a0f600554610a0f8d6002015460065461175f90919063ffffffff16565b9050610cb4610ca98561062b8464e8d4a510006116ef565b6004870154906116c0565b6004860155505b438460020181905550505050505b50565b600060078281548110610cef57634e487b7160e01b600052603260045260246000fd5b600091825260208083208584526008825260408085203380875293528420805485825560018201959095556005909302018054909450919291610d3f916001600160a01b0391909116908361178b565b8154604051859133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059591610d73916123d6565b60405180910390a350505050565b60075460005b81811015610da857610d9881610a72565b610da18161249d565b9050610d87565b5050565b610db4611513565b6001600160a01b0316610dc5610fd2565b6001600160a01b031614610deb5760405162461bcd60e51b8152600401610481906121de565b610df560006117aa565b565b610dff611513565b6001600160a01b0316610e10610fd2565b6001600160a01b031614610e365760405162461bcd60e51b8152600401610481906121de565b8015610e4457610e44610d81565b6001600160a01b038216610e6a5760405162461bcd60e51b81526004016104819061207b565b610e7382611110565b15610e905760405162461bcd60e51b8152600401610481906123a9565b6000600a544311610ea357600a54610ea5565b435b600954909150610eb590856116c0565b6009556040805160a0810182526001600160a01b039485168152602081019586529081019182526000606082018181526080830182815260078054600181018255935292517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600590930292830180546001600160a01b031916919097161790955594517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68986015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a85015591517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b84015550517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c90910155565b6000546001600160a01b031690565b6000818311156110035760405162461bcd60e51b815260040161048190612213565b60065482116110245760055461101d90610a0f848661175f565b905061077b565b60065483106110375761101d828461175f565b61106a61104f6006548461175f90919063ffffffff16565b610885600554610a0f8760065461175f90919063ffffffff16565b9392505050565b600061107b611513565b6001600160a01b031661108c610fd2565b6001600160a01b0316146110b25760405162461bcd60e51b8152600401610481906121de565b6110c66001600160a01b038416338461178b565b50600192915050565b60086020908152600092835260408084209091529082529020805460018201546002830154600390930154919290916001600160a01b031684565b60055481565b600754600090815b8181101561118857836001600160a01b03166007828154811061114b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600590910201546001600160a01b031614156111765760019250505061118f565b806111808161249d565b915050611118565b5060009150505b919050565b60018060008282546111a69190612403565b90915550506001546111b98484846117fa565b60015481146106b55760405162461bcd60e51b815260040161048190612346565b60018060008282546111ec9190612403565b909155505060015460008281526008602090815260408083206001600160a01b038716845290915290205461122490849084906117fa565b60015481146112455760405162461bcd60e51b815260040161048190612346565b505050565b611252611513565b6001600160a01b0316611263610fd2565b6001600160a01b0316146112895760405162461bcd60e51b8152600401610481906121de565b6001600160a01b03811661129c57600080fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517ff5721dfa6ddbf8e4a2cd38b2152fff4008050b9b37de59ae1e022dde4bd5df7390600090a250565b6003546001600160a01b031681565b60006007828154811061131857634e487b7160e01b600052603260045260246000fd5b6000918252602080832085845260088252604080852033865290925292206005909102909101915061134983610a72565b6113533384611517565b6003820154815461136e9164e8d4a510009161062b916116ef565b60018201556004820154815461138e9164e8d4a510009161062b916116ef565b6002909101555050565b6113a0611513565b6001600160a01b03166113b1610fd2565b6001600160a01b0316146113d75760405162461bcd60e51b8152600401610481906121de565b6002546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906114099085908590600401611eab565b602060405180830381600087803b15801561142357600080fd5b505af1158015611437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145b9190611d53565b5060405181906001600160a01b038416907f5a513126cbc10dde78a9844543bd609b2c5b0f4169cecb81f0378f00fa2bdbf090600090a35050565b61149e611513565b6001600160a01b03166114af610fd2565b6001600160a01b0316146114d55760405162461bcd60e51b8152600401610481906121de565b6001600160a01b0381166114fb5760405162461bcd60e51b815260040161048190611f30565b610cc9816117aa565b6002546001600160a01b031681565b3390565b60006007828154811061153a57634e487b7160e01b600052603260045260246000fd5b600091825260208083208584526008825260408085206001600160a01b038916865290925292208054600590920290920192506115895760405162461bcd60e51b81526004016104819061237d565b60006115b78260010154610a6164e8d4a5100061062b876003015487600001546116ef90919063ffffffff16565b6002546040516370a0823160e01b81529192506001600160a01b0316906370a08231906115e8903090600401611e73565b60206040518083038186803b15801561160057600080fd5b505afa158015611614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116389190611d87565b8111156116575760405162461bcd60e51b81526004016104819061204d565b611661858261195e565b5050505050565b6106b5846323b872dd60e01b85858560405160240161168993929190611e87565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611af7565b6000806116cd8385612403565b90508381101561106a5760405162461bcd60e51b815260040161048190611fad565b6000826116fe5750600061077b565b600061170a838561243b565b905082611717858361241b565b1461106a5760405162461bcd60e51b81526004016104819061219d565b60008082116117555760405162461bcd60e51b81526004016104819061212f565b61106a828461241b565b6000828211156117815760405162461bcd60e51b8152600401610481906120b2565b61106a828461245a565b6112458363a9059cbb60e01b8484604051602401611689929190611eab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006007838154811061181d57634e487b7160e01b600052603260045260246000fd5b600091825260208083208684526008825260408085206001600160a01b03808b16875293529093206003810154600590930290930193501633146118735760405162461bcd60e51b815260040161048190612028565b80548311156118945760405162461bcd60e51b815260040161048190612299565b61189d84610a72565b6118a78585611517565b80546118b3908461175f565b80825560038301546118d09164e8d4a510009161062b91906116ef565b6001820155600482015481546118f09164e8d4a510009161062b916116ef565b600282015581546001600160a01b03161561191b57815461191b906001600160a01b0316338561178b565b8054604051859133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689161194f916123d6565b60405180910390a35050505050565b6002546040516370a0823160e01b81526000916001600160a01b0316906370a082319061198f903090600401611e73565b60206040518083038186803b1580156119a757600080fd5b505afa1580156119bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119df9190611d87565b905080821115611a735760025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611a1b9086908590600401611eab565b602060405180830381600087803b158015611a3557600080fd5b505af1158015611a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6d9190611d53565b50611245565b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611aa59086908690600401611eab565b602060405180830381600087803b158015611abf57600080fd5b505af1158015611ad3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b59190611d53565b6000611b4c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b869092919063ffffffff16565b8051909150156112455780806020019051810190611b6a9190611d53565b6112455760405162461bcd60e51b8152600401610481906122fc565b6060611b958484600085611b9d565b949350505050565b606082471015611bbf5760405162461bcd60e51b8152600401610481906120e9565b611bc885611c52565b611be45760405162461bcd60e51b815260040161048190612262565b600080866001600160a01b03168587604051611c009190611e57565b60006040518083038185875af1925050503d8060008114611c3d576040519150601f19603f3d011682016040523d82523d6000602084013e611c42565b606091505b5091509150610a67828286611c58565b3b151590565b60608315611c6757508161106a565b825115611c775782518084602001fd5b8160405162461bcd60e51b81526004016104819190611efd565b80356001600160a01b038116811461118f57600080fd5b600060208284031215611cb9578081fd5b61106a82611c91565b60008060408385031215611cd4578081fd5b611cdd83611c91565b91506020830135611ced816124ce565b809150509250929050565b60008060408385031215611d0a578182fd5b611d1383611c91565b946020939093013593505050565b600080600060608486031215611d35578081fd5b611d3e84611c91565b95602085013595506040909401359392505050565b600060208284031215611d64578081fd5b815161106a816124ce565b600060208284031215611d80578081fd5b5035919050565b600060208284031215611d98578081fd5b5051919050565b60008060408385031215611db1578182fd5b82359150611dc160208401611c91565b90509250929050565b600080600060608486031215611dde578283fd5b83359250611dee60208501611c91565b91506040840135611dfe816124ce565b809150509250925092565b60008060408385031215611e1b578182fd5b50508035926020909101359150565b600080600060608486031215611e3e578283fd5b83359250602084013591506040840135611dfe816124ce565b60008251611e69818460208701612471565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03959095168552602085019390935260408401919091526060830152608082015260a00190565b901515815260200190565b6000602082528251806020840152611f1c816040850160208701612471565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f736574426f6e75733a2062616420626f6e7573456e64426c6f636b0000000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b6020808252600b908201526a37b7363c90333ab73232b960a91b604082015260600190565b6020808252601490820152733bba33103737ba1032b737bab3b4102a37b5b2b760611b604082015260600190565b60208082526018908201527f6164643a206e6f74207374616b65546f6b656e20616464720000000000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252601d908201527f736574426f6e75733a2062616420626f6e75734d756c7469706c696572000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260149082015273109b1bd8dac81c985b99d948195e18d95959195960621b604082015260600190565b6020808252600790820152663130b21039b7b360c91b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601290820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604082015260600190565b6020808252601b908201527f6465706f7369743a206e6f7420616363657074206465706f7369740000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601290820152711b9bdd1a1a5b99c81d1bc81a185c9d995cdd60721b604082015260600190565b60208082526013908201527206164643a207374616b65546f6b656e2064757606c1b604082015260600190565b90815260200190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b60008219821115612416576124166124b8565b500190565b60008261243657634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612455576124556124b8565b500290565b60008282101561246c5761246c6124b8565b500390565b60005b8381101561248c578181015183820152602001612474565b838111156106b55750506000910152565b60006000198214156124b1576124b16124b8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b8015158114610cc957600080fdfea26469706673582212201534d62e01a9860d716c87b0bf76d580f40d8d5599d507d3c6b7158c2618039b64736f6c63430008000033";

export class Farm__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token: string,
    _devaddr: string,
    _tokenPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _bonusEndBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Farm> {
    return super.deploy(
      _token,
      _devaddr,
      _tokenPerBlock,
      _startBlock,
      _bonusEndBlock,
      overrides || {}
    ) as Promise<Farm>;
  }
  getDeployTransaction(
    _token: string,
    _devaddr: string,
    _tokenPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _bonusEndBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _devaddr,
      _tokenPerBlock,
      _startBlock,
      _bonusEndBlock,
      overrides || {}
    );
  }
  attach(address: string): Farm {
    return super.attach(address) as Farm;
  }
  connect(signer: Signer): Farm__factory {
    return super.connect(signer) as Farm__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FarmInterface {
    return new utils.Interface(_abi) as FarmInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Farm {
    return new Contract(address, _abi, signerOrProvider) as Farm;
  }
}
